#!@PYTHON@

import casmutils as cu
import numpy as np

def test_coordinate_within():
    lat=cu.xtal.Lattice(np.array([[2,0,0],[0,2,0],[0,0,2]]))
    start_coord=cu.xtal.Coordinate(np.array([0.1,0.2,0.3]))
    lat_translation=cu.xtal.Coordinate.from_fractional(np.array([2,3,4]),lat)

    translated_coord=start_coord+lat_translation
    withined_coord=translated_coord._bring_within_const(lat)
    assert(not cu.xtal.Coordinate.is_equal(translated_coord,start_coord,1e-5))
    assert(cu.xtal.Coordinate.is_equal(withined_coord,start_coord,1e-5))

    translated_coord._bring_within(lat)
    assert(cu.xtal.Coordinate.is_equal(translated_coord,start_coord,1e-5))



def main():
    #This is NOT how we want to test python code, it's just a step in the
    #right direction. We need some sort of framework like we have googletest
    #for the c++ parts
    coord=cu.xtal.Coordinate(np.array([0.5,0.6,-0.1]))
    print(coord._cart_const())
    print(coord.cart())

    test_coordinate_within()


if __name__=="__main__":
    main()
